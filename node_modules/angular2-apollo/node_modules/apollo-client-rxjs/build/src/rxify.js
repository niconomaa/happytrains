"use strict";
var apollo_client_1 = require('apollo-client');
var variables_1 = require('./utils/variables');
var RxObservableQuery_1 = require('./RxObservableQuery');
var isFunction = require('lodash.isfunction');
function rxify(clientOrWatchQuery) {
    if (clientOrWatchQuery instanceof apollo_client_1.ApolloClient) {
        var savedWatchQuery_1 = clientOrWatchQuery.watchQuery;
        clientOrWatchQuery.watchQuery = function (options) {
            var _this = this;
            return wrapWatchQuery(function (opts) { return savedWatchQuery_1.call(_this, opts); })(options);
        }.bind(clientOrWatchQuery);
        return clientOrWatchQuery;
    }
    if (isFunction(clientOrWatchQuery)) {
        return wrapWatchQuery(clientOrWatchQuery);
    }
    throw new Error('Use ApolloClient or a function that returns ObservableQuery');
}
exports.rxify = rxify;
function wrapWatchQuery(watchQuery) {
    return function (options) {
        if (typeof options.variables === 'object') {
            return variables_1.createWithObservableVariables(options, function (newOptions) { return watchQuery(newOptions); });
        }
        return new RxObservableQuery_1.RxObservableQuery(watchQuery(options));
    };
}
//# sourceMappingURL=rxify.js.map